{"ast":null,"code":"import _slicedToArray from \"/Users/hines/Documents/Spring Learning/front-end/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hines/Documents/Spring Learning/front-end/src/App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport axios from 'axios';\nconst TEXTURL = \"http://localhost:8080/test\";\n\nfunction App() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  const getText = async () => {\n    if (!text) {\n      const textdata = await axios.get(TEXTURL);\n      setText(textdata.data[textdata.data.length - 1].str);\n    } else {\n      setText(\"\");\n    }\n  };\n\n  const sendText = async event => {\n    // POSTs text from field to the server, and subsequently the database\n    event.preventDefault();\n    const data = new FormData(event.target);\n    const test_string = data.get('str');\n    const payload = {\n      'str': test_string\n    };\n\n    try {\n      await axios.post(TEXTURL, payload);\n      alert('Submitted');\n    } catch (e) {\n      alert(e);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: sendText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Text to send to the backend: \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"str\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-light\",\n    onClick: getText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Show/Hide Backend Text\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \" \", text, \" \")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hines/Documents/Spring Learning/front-end/src/App.js"],"names":["React","useState","axios","TEXTURL","App","text","setText","getText","textdata","get","data","length","str","sendText","event","preventDefault","FormData","target","test_string","payload","post","alert","e","logo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,4BAAhB;;AAEA,SAASC,GAAT,GAAe;AAAA,oBACWH,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,QACNI,IADM;AAAA,QACAC,OADA;;AAGb,QAAMC,OAAO,GAAG,YAAY;AAC1B,QAAI,CAACF,IAAL,EAAU;AACV,YAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAvB;AAEAG,MAAAA,OAAO,CAACE,QAAQ,CAACE,IAAT,CAAcF,QAAQ,CAACE,IAAT,CAAcC,MAAd,GAAqB,CAAnC,EAAsCC,GAAvC,CAAP;AACC,KAJD,MAIK;AAACN,MAAAA,OAAO,CAAC,EAAD,CAAP;AAAY;AACnB,GAND;;AAQA,QAAMO,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAChC;AACAA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAML,IAAI,GAAG,IAAIM,QAAJ,CAAaF,KAAK,CAACG,MAAnB,CAAb;AACA,UAAMC,WAAW,GAAGR,IAAI,CAACD,GAAL,CAAS,KAAT,CAApB;AAEA,UAAMU,OAAO,GAAG;AACd,aAAQD;AADM,KAAhB;;AAIC,QAAG;AACA,YAAMhB,KAAK,CAACkB,IAAN,CAAWjB,OAAX,EAAoBgB,OAApB,CAAN;AACAE,MAAAA,KAAK,CAAC,WAAD,CAAL;AACF,KAHD,CAGC,OAAMC,CAAN,EAAQ;AACND,MAAAA,KAAK,CAACC,CAAD,CAAL;AACF;AACD,GAhBH;;AAkBA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG;AAAM,IAAA,QAAQ,EAAGV,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAC+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD/B,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAIU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJV,EAKE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAFH,EASG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATH,EAUE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,eAAhC;AAAgD,IAAA,OAAO,EAAGN,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKF,IAAL,MAXF,CADF,CADF;AAiBD;;AAED,eAAeD,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\n\nconst TEXTURL = \"http://localhost:8080/test\";\n\nfunction App() {\n  const [text, setText] = useState([]);\n\n  const getText = async () => {\n    if (!text){\n    const textdata = await axios.get(TEXTURL);\n\n    setText(textdata.data[textdata.data.length-1].str)\n    }else{setText(\"\")}\n  }\n\n  const sendText = async (event) => {\n    // POSTs text from field to the server, and subsequently the database\n    event.preventDefault();\n    const data = new FormData(event.target);\n    const test_string = data.get('str');\n\n    const payload = {\n      'str' : test_string\n    }\n\n     try{\n        await axios.post(TEXTURL, payload);\n        alert('Submitted');\n     }catch(e){\n        alert(e);\n     }\n    }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n         <form onSubmit={ sendText }>\n           <label>\n             Text to send to the backend: <br/>\n             <input type=\"text\" name=\"str\" />\n           </label><br/>\n           <input type=\"submit\" value=\"Submit\" />\n         </form>\n         <hr/>\n        <button type=\"button\" className=\"btn btn-light\" onClick={ getText }>Show/Hide Backend Text</button>\n        <p> {text} </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}